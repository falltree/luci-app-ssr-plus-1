#!/bin/sh  /etc/rc.common
#
# Copyright (C) 2017 openwrt-ssr
# Copyright (C) 2017 yushi studio <ywb94@qq.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

cycle_time=60
switch_time=3
normal_flag=0
server_locate=0
server_count=0
NAME=shadowsocksr
ENABLE_SERVER=nil
CONFIG_SWTICH_FILE=/var/etc/${NAME}_t.json
LOG_FILE=/tmp/ssrplus.log

[ -n "$1" ] && cycle_time=$1
[ -n "$2" ] && switch_time=$2

echolog() {
	local d="$(date "+%Y-%m-%d %H:%M:%S")"
	echo -e "$d:    - switcher $*" >>$LOG_FILE
}

uci_get_by_name() {
	local ret=$(uci get $NAME.$1.$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

DEFAULT_SERVER=$(uci_get_by_type global global_server)
CURRENT_SERVER=$DEFAULT_SERVER

check_proxy() {
  local result=0
  local try_count=$(uci_get_by_type global switch_try_count 3)
  for i in $(seq 1 $try_count)
  do
    tcping -q -c 1 -i $switch_time -p 80 www.google.com
    if [ "$?" == "0" ]; then
      result=0
      break
    else
      tcping -q -c 1 -i $switch-time -p 80 www.baidu.com
      if [ "$?" == "0" ]; then
        result=1
      else
        result=2
      fi
    fi
    sleep 1;
  done
  return $result;
}


test_proxy() {
local servername=$(uci_get_by_name $1 server)
local serverport=$(uci_get_by_name $1 server_port)
ret=$(ping -c 3 $servername  | grep 'loss' | awk -F ',' '{ print $3 }' | awk -F "%" '{ print $1 }')
[ -z "$ret"  ] && return 1
[ "$ret" -gt "50" ] && return 1
ipset add ss_spec_wan_ac $servername 2>/dev/null
ret=$?
tcping -q -c 1 -i $switch_time -p $serverport $servername
local ret2=$?
if [ "$ret" = "0" ] ;then
ipset del ss_spec_wan_ac $servername 2>/dev/null
fi
if [ "$ret2" = "0" ] ;then
return 0
else
return 1
fi
}

search_proxy() {
let server_count=server_count+1
[ "$normal_flag" = "1" -a "$server_count" -le "$server_locate" ] && return 0
[ "$(uci_get_by_name $1 switch_enable)" != "1"  ]  && return 1
[ $ENABLE_SERVER != nil ] && return 0
[ "$1" = "$CURRENT_SERVER" ] && return 0
local servername=$(uci_get_by_name $1 server)
local serverport=$(uci_get_by_name $1 server_port)
ipset add ss_spec_wan_ac $servername 2>/dev/null
ret=$?
tcping -q -c 1 -i $switch_time -p $serverport $servername
 local ret2=$?
if [ "$ret" = "0" ] ;then
ipset del ss_spec_wan_ac $servername 2>/dev/null
fi
if [ "$ret2" = "0" ] ;then
server_locate=$server_count
ENABLE_SERVER=$1
return 0
else
return 1
fi

}

select_proxy() {

config_load $NAME
ENABLE_SERVER=nil
mkdir -p /var/run /var/etc
server_count=0
config_foreach search_proxy servers

}

switch_proxy() {
/etc/init.d/shadowsocksr restart $1
return 0
}

start() {
[ $(uci_get_by_name $DEFAULT_SERVER kcp_enable) = "1"  ]  && return 1

while [ "1" = "1" ]
do
   sleep $cycle_time

   if [ "$CURRENT_SERVER" != "$DEFAULT_SERVER" ] ;then
   #echo "not default proxy"
   echolog "current server is not default main server, try to switch back."

     if test_proxy $DEFAULT_SERVER  ;then
       #echo "switch to default proxy"
       echolog " main server is avilable."

       CURRENT_SERVER=$DEFAULT_SERVER
       switch_proxy $CURRENT_SERVER
       echolog "switch to default ["$(uci_get_by_name $CURRENT_SERVER server)"] proxy"
       continue
     else
       echolog "main server is NOT avilable, cntinue using current server."
     fi
    fi

   check_proxy
   current_ret=$?

   if [ "$current_ret" = "1" ] ;then
     #echo "current error"
     echolog "current server error, try to switch another server."

     select_proxy
     if [ "$ENABLE_SERVER" != nil ] ;then
      #echo $(uci_get_by_name $new_proxy server)
      echolog "another server is avilable, now switching server."
      CURRENT_SERVER=$ENABLE_SERVER
      switch_proxy $CURRENT_SERVER
      normal_flag=1
      echolog "server switched"
     else
      switch_proxy $CURRENT_SERVER
      normal_flag=1
      echolog "Try restart current server."
     fi
   else
    normal_flag=0
    echolog "No Problem."
   fi

done
}
